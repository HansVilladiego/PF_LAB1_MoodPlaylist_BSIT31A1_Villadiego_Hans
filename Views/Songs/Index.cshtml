@model MoodPlaylist.SQLite.Repository.Models.SongListViewModel
@{
    ViewData["Title"] = "My Songs";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>ðŸŽµ My Songs</h2>
    <a href="@Url.Action("Create")" class="btn btn-primary">
        <i class="fas fa-plus"></i> Add New Song
    </a>
</div>

<!-- Search and Filter -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-6">
                <label for="search" class="form-label">Search Songs</label>
                <input type="text" class="form-control" id="search" name="search" 
                       value="@Model.SearchTerm" placeholder="Search by title or artist...">
            </div>
            <div class="col-md-4">
                <label for="moodId" class="form-label">Filter by Mood</label>
                <select class="form-select" id="moodId" name="moodId">
                    <option value="">All Moods</option>
                    @foreach (var mood in Model.Moods)
                    {
                        <option value="@mood.Id" selected="@(Model.SelectedMoodId == mood.Id)" 
                                style="color: @mood.Color;">@mood.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-secondary w-100">Filter</button>
            </div>
        </form>
    </div>
</div>

<!-- Songs List -->
@if (Model.Songs.Any())
{
    <div class="row">
        @foreach (var song in Model.Songs)
        {
            <div class="col-md-6 mb-3">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">@song.Title</h5>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" 
                                        data-bs-toggle="dropdown">
                                    Actions
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="@Url.Action("Details", new { id = song.Id })">View</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Edit", new { id = song.Id })">Edit</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form method="post" action="@Url.Action("Delete", new { id = song.Id })" 
                                              style="display: inline;" 
                                              onsubmit="return confirm('Are you sure you want to delete this song?');">
                                            <button type="submit" class="dropdown-item text-danger">Delete</button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <p class="card-text text-muted">by @song.Artist</p>
                        <p class="card-text">
                            <small class="text-muted">
                                <a href="@song.YouTubeUrl" target="_blank" class="text-decoration-none">
                                    ðŸŽ¬ Watch on YouTube
                                </a>
                            </small>
                        </p>
                        <div class="mb-2">
                            @foreach (var songMood in song.SongMoods)
                            {
                                <span class="badge rounded-pill me-1" 
                                      style="background-color: @songMood.Mood.Color; color: white;">
                                    @songMood.Mood.Name
                                </span>
                            }
                        </div>
                        <small class="text-muted">Added @song.CreatedAt.ToString("MMM dd, yyyy")</small>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination info -->
    <div class="mt-4">
        <p class="text-muted">Showing @Model.Songs.Count songs</p>
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-4">
            <i class="fas fa-music fa-3x text-muted"></i>
        </div>
        <h4>No songs found</h4>
        @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.SelectedMoodId.HasValue)
        {
            <p class="text-muted">Try adjusting your search or filter criteria.</p>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Clear Filters</a>
        }
        else
        {
            <p class="text-muted">Start building your music library by adding your first song!</p>
            <a href="@Url.Action("Create")" class="btn btn-primary">Add Your First Song</a>
        }
    </div>
}
